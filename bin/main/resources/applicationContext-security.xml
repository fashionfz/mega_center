<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd">
   
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/resource/**" security="none" />
    <security:http pattern="/login.jsp" security="none"/>
    <security:http pattern="/403.html" security="none"/>
    
    
    
    
    <security:http use-expressions="true" auto-config="true">
      <security:form-login login-page="/login.jsp"  authentication-failure-url="/login.jsp"  default-target-url="/main.html" /> 
            
        <!-- <security:custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER"  /> -->
        <security:custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
        <security:logout logout-url="/j_spring_security_logout" 
       logout-success-url="/login.jsp" invalidate-session="true"/>
        <!-- 实现免登陆验证 -->
        <security:remember-me user-service-ref="myUserDetailService" token-validity-seconds="123456789"/>
        <security:session-management invalid-session-url="/login.jsp">
        <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="false" expired-url="/login.jsp" />
        </security:session-management>
        <security:access-denied-handler error-page="/403.html"/>
    </security:http>


    <!-- 登录验证器 -->
<!--     <bean id="loginFilter"
		class="com.core.security.MyUsernamePasswordAuthenticationFilter">
		<property name="filterProcessesUrl" value="/j_spring_security_check"></property>
		<property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></property>
		<property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></property>
		<property name="authenticationManager" ref="authenticationManager"></property>
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="loginLogAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/main.html"></property>
	</bean>
	<bean id="simpleUrlAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/login.jsp"></property>
	</bean>

 -->



	<!-- 未登录的切入点 -->
	<bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login.jsp" />
	</bean>




	
	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性，
	 我们的所有控制将在这三个类中实现，解释详见具体配置 -->
	<bean id="myFilter" class="com.core.security.MyFilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
		<property name="securityMetadataSource" ref="securityMetadataSource" />
	</bean>
	
	<!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<security:authentication-manager alias="authenticationManager" erase-credentials="false">
		<security:authentication-provider user-service-ref="myUserDetailService">
			<security:password-encoder hash="md5">  
	            <!-- <security:salt-source user-property="username"/>   -->
	            <security:salt-source user-property="username"/>
	        </security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
	
	
	<bean id="md5Encoder" class="com.core.security.MD5Encoder" /> 
	
	<bean id="myUserDetailService" class="com.core.security.MyUserDetailService">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<bean id="myAccessDecisionManagerBean" class="com.core.security.MyAccessDecisionManager"/>

	<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
	<bean id="securityMetadataSource" class="com.core.security.MyInvocationSecurityMetadataSource" />	

	
</beans>
